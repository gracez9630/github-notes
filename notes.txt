HTML Element:
Most HTML elements have an opening and closing tab
All HTML tags are written in lowercase
lorem ipsum text are used as placeholder text
HTML has a special element for creating unordered lists, or bullet point style lists.
HTML has another special element for creating ordered lists, or numbered lists.
HTML stands for Hyper Text Markup Language
You can add another level of organization in your HTML document within the html tags with the head and body elements.
Every HTML page has a body element.
In addition to classes, each HTML element can also have an id attribute.
<h1>Hello</h1>
h1 is the main heading, with h2 a subheading, and h3, h4, h5, h6 as to indicate different levels of subheadings.
h2 would be below h1, wit h3 behind h2 and continue
h6 is the smallest heading to make
<p>I’m a p tag!</p>
p stands for a paragraph
p would be under the headings
<!-- ends with -->
Known as commenting
A way to leave comments for other developers within your code while unaffecting the result output
Way to make code inactive without having to delete it


Unordered list starts with an opening <ul> element, followed by <li> elements
<ul>
  <li>...</li>
</ul>
Orders list starts with an opening <ol> element, followed by any number of <li> elements
<ol>
  <li>Garfield</li>
</ol>
By adding ul or ol element inside another ul or ol, makes a second type of it
<ul>
<li> … </li>
<ul>
	<li> … </li>
</ul>
</ul>
< ... > 
Known as angle brackets
Input elements are a way to get input from your user
Input elements are self closing
<input type="text">
To hide the text, use:
<input type=”password”>
Placeholder text is what is displayed on your input element before your user has inputted anything
<input type="text" placeholder="this is placeholder text">
By specifying an action attribute on your form element, you can build web forms that actually submit data to a server using nothing more than pure HTML
The input element would be inside a form element
<form action="/url-where-you-want-to-submit-form-data">
  <input>
</form>
Submit button would send the data from your form to the URL you specified with your form’s action attribute
Should be inside the form element
<button type="submit">this button submits the form</button>
The attribute require that is within the input element makes user not be able to submit your form until they have filled them out
<input type="text" required>
Radio buttons are a type of input
Can be used for questions where you want the user to give you one answer out of the multiple options.
Can be nested within its own label element
By wrapping a input element inside a label element, it would automatically associate the radio button input with the label element surrounding it
All related radio buttons should have the same name attribute to create a radio button group
By creating a radio group, selecting another radio button would automatically deselect the other button in the same group ensuring only one answer is provided.
<label> 
  <input type="radio" name="indoor-outdoor">Indoor 
</label>
It is considered best practice to set a for attribute on the label element, with a value that matches the value of the id attribute of the input element. This allows assistive technologies to create a linked relationship between the label and the related input element.
<input id="indoor" type="radio" name="indoor-outdoor">
<label for="indoor">Indoor</label>
We can also nest the input element within the label tags:
<label for="indoor"> 
  <input id="indoor" type="radio" name="indoor-outdoor">Indoor 
</label>
Should be inside the form element
Checkboxes are a type of input
Can be nested in their own label element
Wrapping it around the label element automatically associates the checkbox input with the label element surrounding it.
All related checkboxes should have the same name attribute.
It is considered best practice to explicitly define the relationship between a checkbox input and its corresponding label by setting the for attribute on the label element to match the id attribute of the associated input element.
<label for="loving"><input id="loving" type="checkbox" name="personality"> Loving</label>
Inputs of type radio and checkbox report their values from the value attribute.
<label for="indoor">
  <input id="indoor" value="indoor" type="radio" name="indoor-outdoor">Indoor
</label>
<label for="outdoor">
  <input id="outdoor" value="outdoor" type="radio" name="indoor-outdoor">Outdoor
</label>
If you omit the value attribute, the submitted form data uses the default value
the value attribute needs to be set to something to identify the option.
You can set a checkbox or radio button to be checked by default using the checked attribute.
add the word checked to the inside of an input element
<input type="radio" name="test-name" checked>
The div element, also known as a division element, is a general purpose container for other elements.
It’s the most commonly used HTML of all
open a div element with <div> and close it on another line with </div>
Used to group elements
The span element is inline
<p> .... <span> .... </span> ... </p>
<!DOCTYPE ...> tag on the first line, where the ... part is the version of HTML. For HTML5, you use <!DOCTYPE html>
The ! and uppercase DOCTYPE is important, especially for older browsers. The html is not case sensitive
<html> goes directly below the <!DOCTYPE html> line, and the closing </html> goes at the end of the page.
the rest of your HTML code needs to be wrapped in html tags
<!DOCTYPE html>
<html>

</html>
The head tag would have any markup with information about your page 
The head is responsible for things of everything else like CSS and title
Doesn’t show in page
The body tag would have any markup with the content of the page (what displays for a user)
The body is responsible for showing up on the page
The body element just like any other HTML element, and all your other elements will inherit your body element's styles.
classes will override the body element's CSS
Metadata elements, such as link, meta, title, and style, typically go inside the head element.
<!DOCTYPE html>
<html>
  <head>
    <meta />
  </head>
  <body>
    <div>
    </div>
  </body>
</html>
Command [ or ] would indent the code from left or right.
<br> to bring a option down
You can add emojis by using this website
<meta charset=“UTF-8”> to get the emoji
Add &#x instead of U+ and then the number to add into any heading or paragraph
<p> This is a emoji → &#x1F60a</p>
To show code snippets use:
< = &lt;
> = &gt;
Surround the code snippets with <code> </code>

HTML5 Element:
HTML5 introduces more descriptive HTML tags. These include main, header, footer, nav, video, article, section and others.
<main> ends with </main>
Helps search engines and other developers find the main content of your page
<img src=”.....”>
Can add images
img element are self-closing
All img elements must have an alt attribute.
<img src=”...” alt=”...”>
Used for screen readers to improve accessibility and is displayed if the image fails to load.
It’s ideal for alt attribute to not contain special characters unless needed
Replit.com: to root out image in folder, add:
src=”(name of folder)/(file name)”
<a href=”...”>this link to …</a>
a (anchor) elements are used to link content outside of your web page
a elements needs a destination web address called an href attribute
<a href=”...”>this link to …</a>
Can be used to create internal links to jump to different sections within a web page
Assign a link’s href attribute to a hash symbol # plus the value of the id attribute for the element you want to internally link. Add the same id attribute to the element you are linking to create an internal link.
<a href="#contacts-header">Contacts</a>
...
<h2 id="contacts-header">Contacts</h2>
You can nest links within other elements
The text, link to …, within the a element is called anchor text, and will display the link to click
<a href=" ... " target="...">link to freecodecamp.org</a>
You can add a element to your website before you know where they will link. Can be handy when changing the behavior of a link using JavaScript
<a href="#" target="_blank">
You can make elements into links by nesting them within an a element
<a href="#"><img src="..." alt="..."></a>


The href in an anchor tag attribute that contains the URL address of the link
id is an attribute that uniquely describes an element
Using id attribute to style a single element and can be used to select and modify specific elements with JavaScript
Should be unique
<h2 id="cat-photo-app">
Can be used to style be using CSS
Not reusable and should be be applied to only one element
Has a higher importance than a class so if both are applied in the same element and have conflicting style, the id will be applied
#cat-photo-element {
  background-color: green;
}
When the user clicks on the contacts link, it will bring them to the section of the web page with the contacts header element
target is an anchor tag attribute that specifies where to open the link
_blank specifies to open the link in a new tab.
<a href="https://www.freecodecamp.org" target="_blank"> ... </a>

